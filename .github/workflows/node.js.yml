# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Cards actions
run-name: ${{ github.actor }} has commited a change 🚀
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
  Build-web-backend:
    runs-on: ubuntu-latest
    defaults:
       run:
         working-directory: ./backend/
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '17'
      - name: Run tests
        run: mvn test
      - name: Package
        run: mvn -Dmaven.test.skip=true package
      - name: Try it!
        run: java -cp target/kotlin-maven-1.0-SNAPSHOT-jar-with-dependencies.jar hmc.backend.WebBackendApplication
  Build-web-frontend:
    runs-on: ubuntu-latest
    defaults:
       run:
         working-directory: ./web-frontend/
    strategy:
      matrix:
        node-version: [20.5.1]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './web-frontend/package-lock.json'
    - run: npm install
    - run: CI=false npm run build --if-present
    - run: npm test
    - run: echo "🍏 This job's status is ${{ job.status }}."
